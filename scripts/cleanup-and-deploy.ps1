# Script de nettoyage et pr√©paration pour d√©ploiement
# Racha Business CRM - Version 1.0.0

Write-Host "üßπ NETTOYAGE ET PR√âPARATION POUR D√âPLOIEMENT" -ForegroundColor Cyan
Write-Host "=============================================" -ForegroundColor Cyan

# 1. Nettoyage des caches et fichiers temporaires
Write-Host "üìÅ Nettoyage des caches..." -ForegroundColor Yellow

# Supprimer les dossiers de cache
$cacheDirs = @("dist", "node_modules\.cache", ".vite", ".eslintcache", "coverage")
foreach ($dir in $cacheDirs) {
    if (Test-Path $dir) {
        Remove-Item -Recurse -Force $dir -ErrorAction SilentlyContinue
        Write-Host "   ‚úì Supprim√©: $dir" -ForegroundColor Green
    }
}

# Supprimer les fichiers temporaires
$tempFiles = @("*.log", "*.tmp", "*.temp", "*.tsbuildinfo")
foreach ($pattern in $tempFiles) {
    Get-ChildItem -Path . -Name $pattern -Recurse -ErrorAction SilentlyContinue | Remove-Item -Force -ErrorAction SilentlyContinue
}

Write-Host "   ‚úì Fichiers temporaires supprim√©s" -ForegroundColor Green

# 2. V√©rification des d√©pendances
Write-Host "üì¶ V√©rification des d√©pendances..." -ForegroundColor Yellow
& npm install --production=false
Write-Host "   ‚úì D√©pendances v√©rifi√©es" -ForegroundColor Green

# 3. V√©rification TypeScript
Write-Host "üîç V√©rification TypeScript..." -ForegroundColor Yellow
& npm run type-check
if ($LASTEXITCODE -eq 0) {
    Write-Host "   ‚úì TypeScript OK" -ForegroundColor Green
} else {
    Write-Host "   ‚ùå Erreurs TypeScript d√©tect√©es" -ForegroundColor Red
    exit 1
}

# 4. Linting du code
Write-Host "üîß V√©rification du code (ESLint)..." -ForegroundColor Yellow
& npm run lint
if ($LASTEXITCODE -eq 0) {
    Write-Host "   ‚úì Code conforme aux standards" -ForegroundColor Green
} else {
    Write-Host "   ‚ö†Ô∏è  Avertissements ESLint d√©tect√©s" -ForegroundColor Yellow
}

# 5. Build de production
Write-Host "üèóÔ∏è  Build de production..." -ForegroundColor Yellow
& npm run build
if ($LASTEXITCODE -eq 0) {
    Write-Host "   ‚úì Build r√©ussi" -ForegroundColor Green
} else {
    Write-Host "   ‚ùå √âchec du build" -ForegroundColor Red
    exit 1
}

# 6. Analyse de la taille du build
Write-Host "üìä Analyse de la taille du build..." -ForegroundColor Yellow
if (Test-Path "dist") {
    $distSize = (Get-ChildItem -Path "dist" -Recurse | Measure-Object -Property Length -Sum).Sum / 1MB
    Write-Host "   üì¶ Taille totale: $([math]::Round($distSize, 2)) MB" -ForegroundColor Cyan
    
    # V√©rifier les gros fichiers
    Get-ChildItem -Path "dist" -Recurse -File | Where-Object { $_.Length -gt 1MB } | ForEach-Object {
        $sizeMB = [math]::Round($_.Length / 1MB, 2)
        Write-Host "   üìÑ Gros fichier: $($_.Name) ($sizeMB MB)" -ForegroundColor Yellow
    }
}

# 7. Cr√©ation du rapport de d√©ploiement
Write-Host "üìã Cr√©ation du rapport de d√©ploiement..." -ForegroundColor Yellow

$deploymentReport = @{
    timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    version = "1.0.0"
    buildSize = if (Test-Path "dist") { [math]::Round(((Get-ChildItem -Path "dist" -Recurse | Measure-Object -Property Length -Sum).Sum / 1MB), 2) } else { 0 }
    status = "ready"
    features = @(
        "‚úÖ CRM complet (Contacts, Produits, Devis, Factures)",
        "‚úÖ Gestion d'inventaire",
        "‚úÖ G√©n√©ration PDF",
        "‚úÖ Int√©gration WhatsApp",
        "‚úÖ Tableau de bord analytique",
        "‚úÖ Interface responsive",
        "‚úÖ Logo Racha Digital int√©gr√©",
        "‚úÖ Base de donn√©es localStorage",
        "‚úÖ Interface d'administration"
    )
    deployment = @{
        recommended_platform = "Cloudflare Pages, Vercel, Netlify"
        build_command = "npm run build"
        output_directory = "dist"
        node_version = "18+"
    }
}

$deploymentReport | ConvertTo-Json -Depth 3 | Out-File -FilePath "deployment-report.json" -Encoding UTF8
Write-Host "   ‚úì Rapport cr√©√©: deployment-report.json" -ForegroundColor Green

# 8. Instructions finales
Write-Host ""
Write-Host "üéâ PR√âPARATION TERMIN√âE AVEC SUCC√àS!" -ForegroundColor Green
Write-Host "====================================" -ForegroundColor Green
Write-Host ""
Write-Host "üì¶ Le projet est pr√™t pour le d√©ploiement:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Dossier de build: ./dist/" -ForegroundColor White
Write-Host "   ‚Ä¢ Taille du build: $([math]::Round(((Get-ChildItem -Path "dist" -Recurse | Measure-Object -Property Length -Sum).Sum / 1MB), 2)) MB" -ForegroundColor White
Write-Host "   ‚Ä¢ Rapport: deployment-report.json" -ForegroundColor White
Write-Host ""
Write-Host "üöÄ Plateformes de d√©ploiement recommand√©es:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Cloudflare Pages (recommand√©)" -ForegroundColor White
Write-Host "   ‚Ä¢ Vercel" -ForegroundColor White
Write-Host "   ‚Ä¢ Netlify" -ForegroundColor White
Write-Host ""
Write-Host "‚öôÔ∏è  Configuration de d√©ploiement:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Commande de build: npm run build" -ForegroundColor White
Write-Host "   ‚Ä¢ Dossier de sortie: dist" -ForegroundColor White
Write-Host "   ‚Ä¢ Version Node.js: 18+" -ForegroundColor White
Write-Host ""
Write-Host "‚úÖ Toutes les fonctionnalit√©s sont op√©rationnelles!" -ForegroundColor Green
